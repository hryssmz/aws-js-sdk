AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Parameters:
  PipelineUserArn:
    Type: String

  PipelineExecutionRoleArn:
    Type: String

  CloudFormationExecutionRoleArn:
    Type: String

  ArtifactsBucketArn:
    Type: String

  CreateImageRepository:
    Type: String
    Default: false
    AllowedValues:
      - true
      - false

  ImageRepositoryArn:
    Type: String

  IdentityProviderThumbprint:
    Type: String

  OidcClientId:
    Type: String

  OidcProviderUrl:
    Type: String

  UseOidcProvider:
    Type: String
    AllowedValues:
      - true
      - false

  SubjectClaim:
    Type: String

  CreateNewOidcProvider:
    Type: String
    AllowedValues:
      - true
      - false

Conditions:
  MissingOidcProvider:
    Fn::Equals:
      - Ref: CreateNewOidcProvider
      - "true"

  DontUseOidc:
    Fn::Not:
      - Fn::Equals:
          - Ref: UseOidcProvider
          - "true"

  MissingPipelineUser:
    Fn::And:
      - Condition: DontUseOidc
      - Fn::Equals:
          - Ref: PipelineUserArn
          - ""

  MissingPipelineExecutionRole:
    Fn::Equals:
      - Ref: PipelineExecutionRoleArn
      - ""

  MissingCloudFormationExecutionRole:
    Fn::Equals:
      - Ref: CloudFormationExecutionRoleArn
      - ""

  MissingArtifactsBucket:
    Fn::Equals:
      - Ref: ArtifactsBucketArn
      - ""

  ShouldHaveImageRepository:
    Fn::Or:
      - Fn::Equals:
          - Ref: CreateImageRepository
          - "true"
      - Fn::Not:
          - Fn::Equals:
              - Ref: ImageRepositoryArn
              - ""

  MissingImageRepository:
    Fn::And:
      - Condition: ShouldHaveImageRepository
      - Fn::Equals:
          - Ref: ImageRepositoryArn
          - ""

Resources:
  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Condition: MissingCloudFormationExecutionRole
    Properties:
      Tags:
        - Key: ManagedStackSource
          Value: AwsSamCli
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: GrantCloudFormationFullAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"

  PipelineExecutionRole:
    Type: AWS::IAM::Role
    Condition: MissingPipelineExecutionRole
    Properties:
      Tags:
        - Key: ManagedStackSource
          Value: AwsSamCli
        - Key: Role
          Value: pipeline-execution-role
      AssumeRolePolicyDocument:
        Fn::If:
          - DontUseOidc
          - Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Principal:
                  AWS:
                    - Fn::If:
                        - MissingPipelineUser
                        - Fn::GetAtt: PipelineUser.Arn
                        - Ref: PipelineUserArn
                Action:
                  - sts:AssumeRole
              - Effect: Allow
                Principal:
                  # Allow roles with tag Role=aws-sam-pipeline-codebuild-service-role to assume this role.
                  # This is required when CodePipeline is the CI/CD system of choice.
                  AWS:
                    - Fn::If:
                        - MissingPipelineUser
                        - Ref: AWS::AccountId
                        - Fn::Select:
                            - 4
                            - Fn::Split:
                                - ":"
                                - Ref: PipelineUserArn
                Action:
                  - sts:AssumeRole
                Condition:
                  StringEquals:
                    aws:PrincipalTag/Role: aws-sam-pipeline-codebuild-service-role
          - Fn::Sub:
              - |
                {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Federated": "arn:${AWS::Partition}:iam::${AWS::AccountId}:oidc-provider/${Url}"
                      },
                      "Action": "sts:AssumeRoleWithWebIdentity",
                      "Condition": {
                        "ForAllValues:StringLike": {
                          "${Url}:aud": "${OidcClientId}",
                          "${Url}:sub":  "${SubjectClaim}"
                        }
                      }
                    }
                  ]
                }
              - Url:
                  Fn::Select:
                    - 1
                    - Fn::Split:
                        - //
                        - Ref: OidcProviderUrl

  ArtifactsBucket:
    Type: AWS::S3::Bucket
    Condition: MissingArtifactsBucket
    DeletionPolicy: Retain
    Properties:
      Tags:
        - Key: ManagedStackSource
          Value: AwsSamCli
      LoggingConfiguration:
        DestinationBucketName:
          Ref: ArtifactsLoggingBucket
        LogFilePrefix: artifacts-logs
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  OidcProvider:
    Type: AWS::IAM::OIDCProvider
    Condition: MissingOidcProvider
    Properties:
      ClientIdList:
        - Ref: OidcClientId
      ThumbprintList:
        - Ref: IdentityProviderThumbprint
      Url:
        Ref: OidcProviderUrl

  PipelineUser:
    Type: AWS::IAM::User
    Condition: MissingPipelineUser
    Properties:
      Tags:
        - Key: ManagedStackSource
          Value: AwsSamCli
      Policies:
        - PolicyName: AssumeRoles
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: "*"
                Condition:
                  StringEquals:
                    aws:ResourceTag/Role: pipeline-execution-role

  PipelineUserAccessKey:
    Type: AWS::IAM::AccessKey
    Condition: MissingPipelineUser
    Properties:
      Serial: 1
      Status: Active
      UserName:
        Ref: PipelineUser

  PipelineUserSecretKey:
    Type: AWS::SecretsManager::Secret
    Condition: MissingPipelineUser
    Properties:
      SecretString:
        Fn::Sub: |
          {
            "aws_access_key_id": "${PipelineUserAccessKey}",
            "aws_secret_access_key": "${PipelineUserAccessKey.SecretAccessKey}"
          }

  PipelineExecutionRolePermissionPolicy:
    Type: AWS::IAM::Policy
    Condition: MissingPipelineExecutionRole
    Properties:
      PolicyName: PipelineExecutionRolePermissions
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: iam:PassRole
            Resource:
              Fn::If:
                - MissingCloudFormationExecutionRole
                - Fn::GetAtt: CloudFormationExecutionRole.Arn
                - Ref: CloudFormationExecutionRoleArn
          - Effect: Allow
            Action:
              - cloudformation:CreateChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:DeleteStack
              - cloudformation:DescribeStackEvents
              - cloudformation:DescribeStacks
              - cloudformation:GetTemplate
              - cloudformation:GetTemplateSummary
              - cloudformation:DescribeStackResource
            Resource: "*"
          - Effect: Allow
            Action:
              - s3:DeleteObject
              - s3:GetObject*
              - s3:PutObject*
              - s3:GetBucket*
              - s3:List*
            Resource:
              Fn::If:
                - MissingArtifactsBucket
                - - Fn::Sub: ${ArtifactsBucket.Arn}/*
                  - Fn::GetAtt: ArtifactsBucket.Arn
                - - Fn::Sub: ${ArtifactsBucketArn}/*
                  - Ref: ArtifactsBucketArn
          - Fn::If:
              - ShouldHaveImageRepository
              - Effect: Allow
                Action: ecr:GetAuthorizationToken
                Resource: "*"
              - Ref: AWS::NoValue
          - Fn::If:
              - ShouldHaveImageRepository
              - Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchDeleteImage
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                Resource:
                  Fn::If:
                    - MissingImageRepository
                    - Fn::GetAtt: ImageRepository.Arn
                    - Ref: ImageRepositoryArn
              - Ref: AWS::NoValue
      Roles:
        - Ref: PipelineExecutionRole

  ArtifactsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Condition: MissingArtifactsBucket
    Properties:
      Bucket:
        Ref: ArtifactsBucket
      PolicyDocument:
        Statement:
          - Effect: Deny
            Action: s3:*
            Principal: "*"
            Resource:
              - Fn::Sub: ${ArtifactsBucket.Arn}/*
              - Fn::GetAtt: ArtifactsBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false
          - Effect: Allow
            Action:
              - s3:GetObject*
              - s3:PutObject*
              - s3:GetBucket*
              - s3:List*
            Resource:
              - Fn::Sub: ${ArtifactsBucket.Arn}/*
              - Fn::GetAtt: ArtifactsBucket.Arn
            Principal:
              AWS:
                - Fn::If:
                    - MissingPipelineExecutionRole
                    - Fn::GetAtt: PipelineExecutionRole.Arn
                    - Ref: PipelineExecutionRoleArn
                - Fn::If:
                    - MissingCloudFormationExecutionRole
                    - Fn::GetAtt: CloudFormationExecutionRole.Arn
                    - Ref: CloudFormationExecutionRoleArn

  ArtifactsLoggingBucket:
    Type: AWS::S3::Bucket
    Condition: MissingArtifactsBucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: LogDeliveryWrite
      Tags:
        - Key: ManagedStackSource
          Value: AwsSamCli
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  ArtifactsLoggingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Condition: MissingArtifactsBucket
    Properties:
      Bucket:
        Ref: ArtifactsLoggingBucket
      PolicyDocument:
        Statement:
          - Effect: Deny
            Action: s3:*
            Principal: "*"
            Resource:
              - Fn::Sub: ${ArtifactsLoggingBucket.Arn}/*
              - Fn::GetAtt: ArtifactsLoggingBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false

  ImageRepository:
    Type: AWS::ECR::Repository
    Condition: MissingImageRepository
    Properties:
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          - Sid: LambdaECRImageRetrievalPolicy
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - ecr:GetRepositoryPolicy
              - ecr:SetRepositoryPolicy
              - ecr:DeleteRepositoryPolicy
          - Sid: AllowPushPull
            Effect: Allow
            Principal:
              AWS:
                - Fn::If:
                    - MissingPipelineExecutionRole
                    - Fn::GetAtt: PipelineExecutionRole.Arn
                    - Ref: PipelineExecutionRoleArn
                - Fn::If:
                    - MissingCloudFormationExecutionRole
                    - Fn::GetAtt: CloudFormationExecutionRole.Arn
                    - Ref: CloudFormationExecutionRoleArn
            Action:
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - ecr:BatchCheckLayerAvailability
              - ecr:PutImage
              - ecr:InitiateLayerUpload
              - ecr:UploadLayerPart
              - ecr:CompleteLayerUpload

Outputs:
  PipelineUser:
    Description: ARN of the Pipeline IAM User
    Value:
      Fn::If:
        - MissingPipelineUser
        - Fn::GetAtt: PipelineUser.Arn
        - Ref: PipelineUserArn

  PipelineUserSecretKey:
    Description: AWS Access Key and Secret Key of pipeline user.
    Condition: MissingPipelineUser
    Value:
      Ref: PipelineUserSecretKey

  CloudFormationExecutionRole:
    Description: ARN of the IAM Role(CloudFormationExecutionRole)
    Value:
      Fn::If:
        - MissingCloudFormationExecutionRole
        - Fn::GetAtt: CloudFormationExecutionRole.Arn
        - Ref: CloudFormationExecutionRoleArn

  PipelineExecutionRole:
    Description: ARN of the IAM Role(PipelineExecutionRole)
    Value:
      Fn::If:
        - MissingPipelineExecutionRole
        - Fn::GetAtt: PipelineExecutionRole.Arn
        - Ref: PipelineExecutionRoleArn

  ArtifactsBucket:
    Description: ARN of the Artifacts bucket
    Value:
      Fn::If:
        - MissingArtifactsBucket
        - Fn::GetAtt: ArtifactsBucket.Arn
        - Ref: ArtifactsBucketArn

  ImageRepository:
    Description: ARN of the ECR image repository
    Condition: ShouldHaveImageRepository
    Value:
      Fn::If:
        - MissingImageRepository
        - Fn::GetAtt: ImageRepository.Arn
        - Ref: ImageRepositoryArn
