# Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
AWSTemplateFormatVersion: "2010-09-09"
Description: Configure the AWSCloudFormationStackSetAdministrationRole to enable use of AWS CloudFormation StackSets.

Metadata:
  TemplateVersion: v1.1.0

Parameters:
  AdminRoleName:
    Type: String

  ExecutionRoleName:
    Type: String

  DNSDelegationRoleName:
    Type: String
    Default: ""

  AppDNSDelegatedAccounts:
    Type: CommaDelimitedList
    Default: ""

  AppDomainName:
    Type: String
    Default: ""

  AppDomainHostedZoneID:
    Type: String
    Default: ""

  AppName:
    Type: String

Conditions:
  DelegateDNS:
    Fn::Not:
      - Fn::Equals:
          - Ref: AppDomainName
          - ""

Resources:
  AdministrationRole:
    Metadata:
      aws:copilot:description: A StackSet admin role assumed by CloudFormation to manage regional stacks
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Ref: AdminRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: AssumeRole-AWSCloudFormationStackSetExecutionRole
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource:
                  - Fn::Sub: arn:${AWS::Partition}:iam::*:role/${ExecutionRoleName}

  ExecutionRole:
    Metadata:
      "aws:copilot:description": "An IAM role assumed by the admin role to create ECR repositories, KMS keys, and S3 buckets"
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Ref: ExecutionRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt: AdministrationRole.Arn
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: ExecutionRolePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: StackSetRequiredPermissions # https://go.aws/3Sa5Tcf
                Effect: Allow
                Action:
                  - cloudformation:*
                  - s3:*
                  - sns:*
                Resource: "*"
              - Sid: KeyAdminPermissions # https://go.aws/3BIqf7a
                Effect: Allow
                Action:
                  - kms:Create*
                  - kms:Describe*
                  - kms:Enable*
                  - kms:List*
                  - kms:Put*
                  - kms:Update*
                  - kms:Revoke*
                  - kms:Disable*
                  - kms:Get*
                  - kms:Delete*
                  - kms:TagResource
                  - kms:UntagResource
                  - kms:ScheduleKeyDeletion
                  - kms:CancelKeyDeletion
                Resource: "*"
              - Sid: ManageECRRepos
                Effect: Allow
                Action:
                  - ecr:DescribeImageScanFindings
                  - ecr:GetLifecyclePolicyPreview
                  - ecr:CreateRepository
                  - ecr:GetDownloadUrlForLayer
                  - ecr:GetAuthorizationToken
                  - ecr:ListTagsForResource
                  - ecr:ListImages
                  - ecr:DeleteLifecyclePolicy
                  - ecr:DeleteRepository
                  - ecr:SetRepositoryPolicy
                  - ecr:BatchGetImage
                  - ecr:DescribeImages
                  - ecr:DescribeRepositories
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetRepositoryPolicy
                  - ecr:GetLifecyclePolicy
                  - ecr:TagResource
                Resource: "*"

  DNSDelegationRole:
    Metadata:
      "aws:copilot:description": "A DNS delegation role to allow accounts: 512667299293 to manage your domain"
    Type: AWS::IAM::Role
    Condition: DelegateDNS
    Properties:
      RoleName:
        Ref: DNSDelegationRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                Fn::Sub: arn:${AWS::Partition}:iam::${AWS::AccountId}:root
            Action:
              - sts:AssumeRole
          - Effect: Allow
            Principal:
              AWS:
                - Fn::Sub: arn:${AWS::Partition}:iam::512667299293:root
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: DNSDelegationPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: HostedZoneReadRecords
                Effect: Allow
                Action:
                  - route53:Get*
                  - route53:List*
                Resource: "*"
              - Sid: HostedZoneUpdate
                Effect: Allow
                Action:
                  - route53:ChangeResourceRecordSets
                Resource:
                  - Fn::Sub: arn:${AWS::Partition}:route53:::hostedzone/${AppHostedZone}
                  - Fn::Sub: arn:${AWS::Partition}:route53:::hostedzone/${AppDomainHostedZoneID}

  AppHostedZone:
    Metadata:
      "aws:copilot:description": "A hosted zone for demo."
    Type: AWS::Route53::HostedZone
    Condition: DelegateDNS
    Properties:
      HostedZoneConfig:
        Comment:
          Fn::Sub: "Hosted zone for copilot application ${AppName}: ${AppName}.${AppDomainName}"
      Name:
        Fn::Sub: ${AppName}.${AppDomainName}

  AppDomainDelegationRecordSet:
    Metadata:
      "aws:copilot:description": "Add NS records to delegate responsibility to the demo. subdomain"
    Type: AWS::Route53::RecordSet
    Condition: DelegateDNS
    Properties:
      HostedZoneName:
        Fn::Sub: ${AppDomainName}.
      Comment:
        Fn::Sub: Record for copilot domain delegation for application ${AppDomainName}
      Name:
        Fn::Sub: ${AppName}.${AppDomainName}.
      Type: NS
      TTL: "900"
      ResourceRecords:
        Fn::GetAtt: AppHostedZone.NameServers

Outputs:
  ExecutionRoleARN:
    Description: ExecutionRole used by this application to set up ECR Repos, KMS Keys and S3 buckets
    Value:
      Fn::GetAtt: ExecutionRole.Arn
  AdministrationRoleARN:
    Description: AdministrationRole used by this application to manage this application's StackSet
    Value:
      Fn::GetAtt: AdministrationRole.Arn
  TemplateVersion:
    Description: Required output to force the stack to update if mutating version.
    Value: v1.1.0
