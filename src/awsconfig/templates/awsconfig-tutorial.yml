# awsconfig/templates/awsconfig-tutorial.yml
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: AWS Config tutorial

Parameters:
  ConfigTopicName:
    Type: String
    Description: AWS Config name
    Default: config-topic

Resources:
  SubscriberFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${AWS::StackName}-SubscriberFunction
      Description: Subscriber function for the topic
      Handler: index.handler
      Runtime: nodejs18.x
      Architectures:
        - arm64
      Events:
        SNSEvent:
          Type: SNS
          Properties:
            Topic:
              Fn::Sub: arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${ConfigTopicName}
      InlineCode: |
        exports.handler = async event => {
          const { Records } = event;
          const messages = Records.map(({ Sns }) => Sns).map(({ Message }) => Message);
          console.log(JSON.stringify(messages, null, 2));
          return messages;
        };

  SubscriberFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${SubscriberFunction}

  # ConfigurationRecorder:
  #   Type: AWS::Config::ConfigurationRecorder
  #   Properties:
  #     Name:
  #       Fn::Sub: ${AWS::StackName}-ConfigurationRecorder
  #     RoleARN:
  #       Fn::Sub: arn:${AWS::Partition}:iam::${AWS::AccountId}:role/aws-service-role/config.amazonaws.com/AWSServiceRoleForConfig
  #     RecordingGroup:
  #       AllSupported: true
  #       IncludeGlobalResourceTypes: true

  # DeliveryChannel:
  #   Type: AWS::Config::DeliveryChannel
  #   DependsOn: ConfigurationRecorder
  #   Properties:
  #     Name:
  #       Fn::Sub: ${AWS::StackName}-DeliveryChannel
  #     S3BucketName:
  #       Ref: ConfigBucket
  #     SnsTopicARN:
  #       Ref: ConfigTopic
  #     ConfigSnapshotDeliveryProperties:
  #       DeliveryFrequency: Six_Hours
