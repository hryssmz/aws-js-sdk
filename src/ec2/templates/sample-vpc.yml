# ec2/templates/sample-vpc.yml
AWSTemplateFormatVersion: "2010-09-09"
Description: Sample VPC

Parameters:
  OperatingSystem:
    Type: String
    Description: Operating system name
    Default: AL2013
    AllowedValues:
      - AL2
      - AL2013
    ConstraintDescription: must be either 'AL2' or 'AL2013'

  InstanceType:
    Type: String
    Description: EC2 instance type
    Default: t2.micro
    AllowedValues:
      - t2.micro
    ConstraintDescription: must be 't2.micro' only

  PublicKeyBody:
    Type: String
    Description: EC2 public key
    AllowedPattern: ssh-rsa .*
    ConstraintDescription: must be a valid RSA public key

  IngressCidr:
    Type: String
    Description: IP address for ingress
    Default: 0.0.0.0/0
    AllowedPattern: \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/\d{1,2}
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x

  UseEIP:
    Type: String
    Description: To use EIP
    Default: false
    AllowedValues:
      - true
      - false
    ConstraintDescription: must be either 'true' or 'false'

Conditions:
  UseEIPCondition:
    Fn::Equals:
      - Ref: UseEIP
      - true

Mappings:
  RegionOS2AMI:
    ap-northeast-1:
      AL2: ami-030cf0a1edb8636ab
      AL2013: ami-067871d950411e643

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.20.0.0/16
      Tags:
        - Key: Name
          Value: CustomVPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: CustomInternetGateway

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway

  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.20.0.0/20
      VpcId:
        Ref: VPC
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: CustomSubnet

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: CustomRouteTable

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: Subnet
      RouteTableId:
        Ref: RouteTable

  InternetRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId:
        Ref: RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway

  SSHKeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName:
        Fn::Sub: ${AWS::StackName}-keypair
      PublicKeyMaterial:
        Ref: PublicKeyBody

  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Web security group
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp:
            Ref: IngressCidr
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp:
            Ref: IngressCidr
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp:
            Ref: IngressCidr
      Tags:
        - Key: Name
          Value: CustomSecurityGroup

  EC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Description: Service role for EC2 instance
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: EC2InstanceRole

  Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId:
        Fn::FindInMap:
          - RegionOS2AMI
          - Ref: AWS::Region
          - Ref: OperatingSystem
      InstanceType:
        Ref: InstanceType
      KeyName:
        Ref: SSHKeyPair
      SecurityGroupIds:
        - Fn::GetAtt: WebSecurityGroup.GroupId
      SubnetId:
        Ref: Subnet
      Tags:
        - Key: Name
          Value: CustomVPCInstance
      IamInstanceProfile:
        Ref: EC2InstanceProfile

  EIP:
    Type: AWS::EC2::EIP
    Condition: UseEIPCondition
    Properties:
      Domain: vpc
      InstanceId:
        Ref: Instance
      Tags:
        - Key: Name
          Value: CustomEIP
