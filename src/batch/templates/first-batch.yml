# ecs/templates/first-batch.yml
AWSTemplateFormatVersion: "2010-09-09"
Description: Getting started batch

Parameters:
  BatchComputeEnvironmentUuid:
    Type: String
    Description: Batch compute environment UUID
    Default: "6c3d04ea-6a56-3df9-aac9-a564b1438e56"

Conditions:
  ECSExecShowCommandsCondition:
    Fn::Not:
      - Fn::Equals:
          - Ref: BatchComputeEnvironmentUuid
          - ""

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.20.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: InternetGateway

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway

  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.20.0.0/20
      VpcId:
        Ref: VPC
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: CustomSubnet

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: RouteTable

  SubnetRouteTableTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: Subnet
      RouteTableId:
        Ref: RouteTable

  InternetRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId:
        Ref: RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway

  BatchSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName:
        Fn::Sub: ${AWS::StackName}-BatchSecurityGroup
      GroupDescription: Web security group
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: BatchSecurityGroup

  # Batch
  ECSTasksServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${AWS::StackName}-ECSTasksServiceRole
      Description: Service role for ECS tasks
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  BatchJobExecutionPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName:
        Fn::Sub: ${AWS::StackName}-BatchJobExecutionPolicy
      Description: Execution policy for batch jobs
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: SSMAccessPermissions
            Effect: Allow
            Action:
              - ssmmessages:CreateControlChannel
              - ssmmessages:CreateDataChannel
              - ssmmessages:OpenControlChannel
              - ssmmessages:OpenDataChannel
            Resource: "*"

  BatchJobRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${AWS::StackName}-BatchJobRole
      Description: Service role for Batch jobs
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - Ref: BatchJobExecutionPolicy

  BatchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/batch/${AWS::StackName}-BatchLogGroup

  BatchComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      ComputeEnvironmentName:
        Fn::Sub: ${AWS::StackName}-BatchComputeEnvironment
      Type: MANAGED
      State: ENABLED
      ComputeResources:
        Type: FARGATE
        MaxvCpus: 1
        SecurityGroupIds:
          - Ref: BatchSecurityGroup
        Subnets:
          - Ref: Subnet

  JobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      JobQueueName:
        Fn::Sub: ${AWS::StackName}-JobQueue
      State: ENABLED
      Priority: 0
      ComputeEnvironmentOrder:
        - ComputeEnvironment:
            Ref: BatchComputeEnvironment
          Order: 1

  JobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      JobDefinitionName:
        Fn::Sub: ${AWS::StackName}-JobDefinition
      Type: container
      PlatformCapabilities:
        - FARGATE
      SchedulingPriority: 0
      Timeout:
        AttemptDurationSeconds: 60
      ContainerProperties:
        Command:
          - /bin/sh
          - -c
          - cat /etc/os-release
        Image: amazonlinux
        ExecutionRoleArn:
          Fn::GetAtt: ECSTasksServiceRole.Arn
        JobRoleArn:
          Fn::GetAtt: BatchJobRole.Arn
        FargatePlatformConfiguration:
          PlatformVersion: LATEST
        NetworkConfiguration:
          AssignPublicIp: DISABLED
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-group:
              Ref: BatchLogGroup
        ResourceRequirements:
          - Type: MEMORY
            Value: 512
          - Type: VCPU
            Value: 0.25

Outputs:
  ECSExecRunTaskCommand:
    Condition: ECSExecShowCommandsCondition
    Description: Run task command for ECS Exec
    Value:
      Fn::Sub: >
        TASK_ARN=`aws ecs run-task --cluster AWSBatch-${AWS::StackName}-BatchComputeEnvironment-${BatchComputeEnvironmentUuid} --count 1 --enable-execute-command --launch-type FARGATE --task-definition ${AWS::StackName}-JobDefinition --network-configuration '{"awsvpcConfiguration":{"subnets":["${Subnet}"],"securityGroups":["${BatchSecurityGroup}"],"assignPublicIp":"ENABLED"}}' --overrides '{"containerOverrides":[{"name":"default","command":["sleep","infinity"]}]}' --query tasks[0].taskArn --output text`; echo $TASK_ARN

  ECSExecExecuteCommand:
    Condition: ECSExecShowCommandsCondition
    Description: Execute command for ECS Exec
    Value:
      Fn::Sub: >
        aws ecs execute-command --container default --cluster AWSBatch-${AWS::StackName}-BatchComputeEnvironment-${BatchComputeEnvironmentUuid} --interactive --command /bin/bash --task "$TASK_ARN"
