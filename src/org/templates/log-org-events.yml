# org/templates/log-org-events.yml
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Log AWS Organizations events

Rules:
  TestUsEast1:
    Assertions:
      - AssertDescription: Only us-east-1 is allowed
        Assert:
          Fn::Equals:
            - Ref: AWS::Region
            - us-east-1

Resources:
  Trail:
    Type: AWS::CloudTrail::Trail
    DependsOn: TrailBucketPolicy
    Properties:
      TrailName:
        Fn::Sub: ${AWS::StackName}-Trail
      IsLogging: true
      S3BucketName:
        Ref: TrailBucket
      IncludeGlobalServiceEvents: true
      EnableLogFileValidation: true
      EventSelectors:
        - IncludeManagementEvents: true
          ReadWriteType: All
          ExcludeManagementEventSources:
            - Fn::Sub: kms.${AWS::URLSuffix}
            - Fn::Sub: rdsdata.${AWS::URLSuffix}

  TrailBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: ${AWS::StackName}-trailbucket-${AWS::Region}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: true
            ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  TrailBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: TrailBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AWSCloudTrailAclCheck
            Effect: Allow
            Principal:
              Service:
                Fn::Sub: cloudtrail.${AWS::URLSuffix}
            Action:
              - s3:GetBucketAcl
            Resource:
              - Fn::GetAtt: TrailBucket.Arn
            Condition:
              StringEquals:
                aws:SourceArn:
                  Fn::Sub: arn:${AWS::Partition}:cloudtrail:${AWS::Region}:${AWS::AccountId}:trail/${AWS::StackName}-Trail
          - Sid: AWSCloudTrailWrite
            Effect: Allow
            Principal:
              Service:
                Fn::Sub: cloudtrail.${AWS::URLSuffix}
            Action:
              - s3:PutObject
            Resource:
              - Fn::Sub: ${TrailBucket.Arn}/AWSLogs/${AWS::AccountId}/*
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
                aws:SourceArn:
                  Fn::Sub: arn:${AWS::Partition}:cloudtrail:${AWS::Region}:${AWS::AccountId}:trail/${AWS::StackName}-Trail

  LogOrgEventsFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${AWS::StackName}-LogOrgEventsFunction

  LogOrgEventsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${AWS::StackName}-LogOrgEventsFunction
      Description: Lambda function that logs AWS Organization events
      Handler: index.handler
      Runtime: nodejs18.x
      Architectures:
        - arm64
      LoggingConfig:
        LogGroup:
          Ref: LogOrgEventsFunctionLogGroup
      Events:
        EventBridgeEvent:
          Type: EventBridgeRule
          Properties:
            Pattern:
              source:
                - aws.organizations
              detail-type:
                - AWS API Call via CloudTrail
              detail:
                eventSource:
                  - Fn::Sub: organizations.${AWS::URLSuffix}
      InlineCode: |
        exports.handler = async (event, context) => {
          console.log("LogOrganizationsEvents");
          console.log("Received event:", JSON.stringify(event, null, 2));
          return "Finished";
        };
