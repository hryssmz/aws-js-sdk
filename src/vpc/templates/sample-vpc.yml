# ec2/templates/sample-vpc.yml
AWSTemplateFormatVersion: "2010-09-09"
Description: Sample VPC

Parameters:
  MyIP:
    Type: String
    Description: My IPv4 address
    AllowedPattern: \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}
    ConstraintDescription: must be a valid IP address of the form x.x.x.x

  UseEIP:
    Type: String
    Description: To use EIP
    Default: false
    AllowedValues:
      - true
      - false
    ConstraintDescription: must be either 'true' or 'false'

Conditions:
  UseEIPCondition:
    Fn::Equals:
      - Ref: UseEIP
      - true

Mappings:
  Region2Instance:
    ap-northeast-1:
      ImageId: ami-067871d950411e643 # AL2013
      InstanceType: t2.micro

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.20.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: InternetGateway

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway

  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.20.0.0/20
      VpcId:
        Ref: VPC
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Subnet

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: RouteTable

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: Subnet
      RouteTableId:
        Ref: RouteTable

  InternetRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId:
        Ref: RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway

  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName:
        Fn::Sub: ${AWS::StackName}-WebSecurityGroup
      GroupDescription: Web security group
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp:
            Fn::Sub: ${MyIP}/32
      Tags:
        - Key: Name
          Value: WebSecurityGroup

  EC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${AWS::StackName}-EC2InstanceRole-${AWS::Region}
      Description: Service role for EC2 instance
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName:
        Fn::Sub: ${AWS::StackName}-EC2InstanceProfile-${AWS::Region}
      Roles:
        - Ref: EC2InstanceRole

  Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId:
        Fn::FindInMap:
          - Region2Instance
          - Ref: AWS::Region
          - ImageId
      InstanceType:
        Fn::FindInMap:
          - Region2Instance
          - Ref: AWS::Region
          - InstanceType
      SecurityGroupIds:
        - Ref: WebSecurityGroup
      SubnetId:
        Ref: Subnet
      IamInstanceProfile:
        Ref: EC2InstanceProfile
      Tags:
        - Key: Name
          Value: Instance

  EIP:
    Type: AWS::EC2::EIP
    Condition: UseEIPCondition
    Properties:
      Domain: vpc
      InstanceId:
        Ref: Instance
      Tags:
        - Key: Name
          Value: EIP
