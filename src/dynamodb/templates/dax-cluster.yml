# dynamodb/templates/dax-cluster.yml
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: DynamoDB Stream with Kinesis Data Stream

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID
    Default: vpc-01d5cfd2cad5314f1

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnet IDs
    Default: subnet-00ee516fa04d610fe,subnet-0c99e2001f0ae6c0a

  PrivateSubnetCidrs:
    Type: CommaDelimitedList
    Description: Private subnet CIDRs
    Default: 172.31.128.0/20,172.31.144.0/20

Resources:
  # VPC
  PrivateSubnet0:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Select:
          - 0
          - Ref: PrivateSubnetCidrs
      VpcId:
        Ref: VpcId
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      Tags:
        - Key: Name
          Value: PrivateSubnet0

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Select:
          - 1
          - Ref: PrivateSubnetCidrs
      VpcId:
        Ref: VpcId
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      Tags:
        - Key: Name
          Value: PrivateSubnet1

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VpcId
      Tags:
        - Key: Name
          Value: PrivateRouteTable

  PrivateSubnet0PrivateRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet0
      RouteTableId:
        Ref: PrivateRouteTable

  PrivateSubnet1PrivateRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet1
      RouteTableId:
        Ref: PrivateRouteTable

  # DynamoDB
  SimpleTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName:
        Fn::Sub: ${AWS::StackName}-SimpleTable
      PrimaryKey:
        Name: Id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  DAXClusterPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName:
        Fn::Sub: ${AWS::StackName}-DAXClusterPolicy-${AWS::Region}
      Description: Policy for DAX Cluster
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:PutItem
              - dynamodb:GetItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
            Resource:
              - Fn::GetAtt: SimpleTable.Arn

  DAXClusterRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${AWS::StackName}-DAXClusterRole-${AWS::Region}
      Description: Service role for DAX Cluster
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: dax.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - Ref: DAXClusterPolicy
