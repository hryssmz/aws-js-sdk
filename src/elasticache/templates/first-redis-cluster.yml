# elasticache/templates/first-redis-cluster.yml
AWSTemplateFormatVersion: "2010-09-09"
Description: First ElastiCache cluster for Redis

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID
    Default: vpc-01d5cfd2cad5314f1

  VpcCidr:
    Type: String
    Description: VPC Cidr block
    Default: 172.31.0.0/16

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnet IDs
    Default: subnet-00ee516fa04d610fe,subnet-0c99e2001f0ae6c0a

  PrivateSubnetCidrs:
    Type: CommaDelimitedList
    Description: Private subnet CIDRs
    Default: 172.31.128.0/20,172.31.144.0/20

  ImageId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Description: EC2 image ID
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64

  InstanceType:
    Type: String
    Description: EC2 instance type
    Default: t2.micro

  CacheNodeType:
    Type: String
    Description: Cache node type
    Default: cache.t2.micro

Resources:
  # VPC
  PrivateSubnet0:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Select:
          - 0
          - Ref: PrivateSubnetCidrs
      VpcId:
        Ref: VpcId
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      Tags:
        - Key: Name
          Value: PrivateSubnet0

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Select:
          - 1
          - Ref: PrivateSubnetCidrs
      VpcId:
        Ref: VpcId
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      Tags:
        - Key: Name
          Value: PrivateSubnet1

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VpcId
      Tags:
        - Key: Name
          Value: PrivateRouteTable

  PrivateSubnet0PrivateRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet0
      RouteTableId:
        Ref: PrivateRouteTable

  PrivateSubnet1PrivateRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet1
      RouteTableId:
        Ref: PrivateRouteTable

  # EC2
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName:
        Fn::Sub: ${AWS::StackName}-EC2SecurityGroup
      GroupDescription: EC2 security group
      VpcId:
        Ref: VpcId
      SecurityGroupIngress:
        - Description: HTTP inbound rule
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: EC2SecurityGroup

  EC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${AWS::StackName}-EC2InstanceRole-${AWS::Region}
      Description: Service role for EC2 instance
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName:
        Fn::Sub: ${AWS::StackName}-EC2InstanceProfile-${AWS::Region}
      Roles:
        - Ref: EC2InstanceRole

  EC2LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Metadata:
      AWS::CloudFormation::Init:
        config:
          files:
            /usr/local/bin/connect-redis-cluster.sh:
              content:
                Fn::Sub: |
                  #!/bin/sh
                  redis-cli -h ${RedisCluster.RedisEndpoint.Address} -p ${RedisCluster.RedisEndpoint.Port}
              mode: "000755"
    Properties:
      LaunchTemplateName:
        Fn::Sub: ${AWS::StackName}-EC2LaunchTemplate
      VersionDescription: Launch template for EC2 instances
      TagSpecifications:
        - ResourceType: launch-template
          Tags:
            - Key: Name
              Value: EC2LaunchTemplate
      LaunchTemplateData:
        ImageId:
          Ref: ImageId
        InstanceType:
          Ref: InstanceType
        IamInstanceProfile:
          Name:
            Ref: EC2InstanceProfile
        SecurityGroupIds:
          - Ref: EC2SecurityGroup
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: EC2Instance
        UserData:
          Fn::Base64:
            Fn::Sub: |
              #!/bin/sh
              dnf update -y
              dnf install -y gcc openssl-devel jemalloc-devel

              wget https://download.redis.io/redis-stable.tar.gz
              tar xf redis-stable.tar.gz
              cd redis-stable
              make BUILD_TLS=yes && make install
              /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2LaunchTemplate --region ${AWS::Region}

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        LaunchTemplateId:
          Ref: EC2LaunchTemplate
        Version:
          Fn::GetAtt: EC2LaunchTemplate.LatestVersionNumber

  # ElastiCache
  CacheSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      CacheSubnetGroupName:
        Fn::Sub: ${AWS::StackName}-CacheSubnetGroup
      Description: Cache subnet group
      SubnetIds:
        - Ref: PrivateSubnet0
        - Ref: PrivateSubnet1

  RedisSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName:
        Fn::Sub: ${AWS::StackName}-RedisSecurityGroup
      GroupDescription: Redis node security group
      VpcId:
        Ref: VpcId
      SecurityGroupIngress:
        - Description: Redis inbound rule
          IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          CidrIp:
            Ref: VpcCidr
      Tags:
        - Key: Name
          Value: RedisSecurityGroup

  RedisCluster:
    Type: AWS::ElastiCache::CacheCluster
    Properties:
      ClusterName:
        Fn::Sub: ${AWS::StackName}-RedisCluster
      Engine: redis
      EngineVersion: 7.0
      CacheNodeType:
        Ref: CacheNodeType
      NumCacheNodes: 1
      CacheSubnetGroupName:
        Ref: CacheSubnetGroup
      VpcSecurityGroupIds:
        - Ref: RedisSecurityGroup
      NetworkType: ipv4
      Port: 6379
